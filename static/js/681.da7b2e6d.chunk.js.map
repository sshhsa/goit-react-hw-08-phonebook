{"version":3,"file":"static/js/681.da7b2e6d.chunk.js","mappings":"qOACA,EAA0B,6BAA1B,EAA8D,0BAA9D,EAA8F,yBAA9F,EAAkI,8B,SCOrHA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBACEC,KAAK,WACLF,UAAWC,EACXE,SATe,WACnBL,GAASM,EAAAA,EAAAA,IAAaP,GACvB,EAQKQ,QAASR,EAAQS,UAEnB,cAAGN,UAAWC,EAAd,SAAyBJ,EAAQU,QACjC,cAAGP,UAAWC,EAAd,SAAyBJ,EAAQW,UACjC,mBAAQR,UAAWC,EAASQ,QAlBX,WACnBX,GAASY,EAAAA,EAAAA,IAAcb,EAAQc,IAChC,EAgBG,SAAmD,aAKxD,EChCGC,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAItD,MAAQ,WAAa,YAAcsD,CAC1F,IAAEG,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGH,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASS,EAAsBC,GACpC,IAAK,IAAIC,EAAOlB,UAAUtB,OAAQyC,EAAyB,IAAIX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKpB,UAAUoB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQtB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMc,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFjB,EAAMiB,GAASvB,UAAUuB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBrC,GAGdsC,EAAatB,EAAMT,MAQvB,GAN0B,kBAAf+B,IACTF,EAAwBE,EAExBA,EAAatB,EAAMT,OAGK,oBAAf+B,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBvB,MAAMC,QAAQkB,GAAkBA,EAAiB,CAACA,GACxEpB,EAAeF,EAAgBC,GAC/B0B,EAAqBf,EAAQhB,WAAM,EAAQ,CAAC,WAG9C,OAFAwB,IAEOG,EAAW3B,MAAM,KAAMD,UAC/B,GAAEiC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTzD,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1BwD,EAAOC,KAAK7B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAwB,EAAcQ,EAAmB/B,MAAM,KAAMkC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBzB,aAAcA,EACdgC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,IAAIA,EAAgCL,EAAsBlD,G,UCpGpD4E,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAqB,SAAAL,GAAK,OAAIA,EAAMM,QAAQC,MAAlB,EAE1BC,EAAwB9B,EACnC,CAACqB,EAAgBM,IACjB,SAACJ,EAAUQ,GACT,OAAQA,GACN,KAAKC,EAAAA,EAAAA,OACH,OAAOT,EAASU,QAAO,SAAA3G,GAAO,OAAKA,EAAQS,MAAb,IAChC,KAAKiG,EAAAA,EAAAA,OACH,OAAOT,EAASU,QAAO,SAAA3G,GAAO,OAAIA,EAAQS,MAAZ,IAChC,QACE,OAAOwF,EAEZ,IAGUW,EAAqBlC,EAAe,CAACqB,IAAiB,SAAAE,GACjE,OAAOA,EAASY,QACd,SAACC,EAAO9G,GAMN,OALIA,EAAQS,OACVqG,EAAMrG,QAAU,EAEhBqG,EAAMC,QAAU,EAEXD,CACR,GACD,CAAEC,OAAQ,EAAGtG,OAAQ,GAExB,IC9BM,SAASuG,IACd,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYV,GAEpC,OACE,wBACGS,EAAgB/C,KAAI,SAAAlE,GAAO,OAC1B,yBACE,SAACD,EAAD,CAAaC,QAASA,KADfA,EAAQc,GADS,KAOjC,C,wBCfD,EAAuB,0BAAvB,EAAyD,2BCMlD,SAASqG,IACd,IAAMlH,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,kBAAMC,UAAWC,EAAUgH,SAlBR,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAEbxH,EAAU,CACdU,KAAM6G,EAAKE,SAAS/G,KAAK6B,MAAMmF,OAC/B/G,OAAQ4G,EAAKE,SAAS9G,OAAO4B,MAAMmF,QAGrC,GAAqB,KAAjB1H,EAAQU,MAAkC,KAAnBV,EAAQW,OAGjC,OAFAV,GAAS0H,EAAAA,EAAAA,IAAW3H,SACpBuH,EAAKK,QAGPC,EAAAA,GAAAA,MAAY,oCACb,EAGC,WACE,kBACE1H,UAAWC,EACXC,KAAK,OACLK,KAAK,OACLoH,YAAY,eACZC,aAAa,SAEf,kBACE5H,UAAWC,EACXC,KAAK,SACLK,KAAK,SACLoH,YAAY,iBACZC,aAAa,SAEf,SAACC,EAAA,EAAD,CAAQ3H,KAAK,SAAb,SAAsB,kBAG3B,C,cC7CD,EAA0B,8BCQnB,SAAS4H,IACd,IAAMhI,GAAWC,EAAAA,EAAAA,MACXyG,GAASO,EAAAA,EAAAA,IAAYb,GAErB6B,EAAqB,SAAAvB,GAAM,OAAI1G,GAASkI,EAAAA,EAAAA,GAAgBxB,GAA7B,EAEjC,OACE,iBAAKxG,UAAWC,EAAhB,WACE,SAAC4H,EAAA,EAAD,CACEI,SAAUzB,IAAWD,EAAAA,EAAAA,IACrB9F,QAAS,WACPsH,EAAmBxB,EAAAA,EAAAA,IACpB,EAJH,SAKC,kBAGD,SAACsB,EAAA,EAAD,CACEI,SAAUzB,IAAWD,EAAAA,EAAAA,OACrB9F,QAAS,WACPsH,EAAmBxB,EAAAA,EAAAA,OACpB,EAJH,SAKC,cAGD,SAACsB,EAAA,EAAD,CACEI,SAAUzB,IAAWD,EAAAA,EAAAA,OACrB9F,QAAS,WACPsH,EAAmBxB,EAAAA,EAAAA,OACpB,EAJH,SAKC,aAKN,CC1CD,OAAgB,OAAS,gCCGlB,SAAS2B,IACd,OAA2BnB,EAAAA,EAAAA,IAAYN,GAA/BG,EAAR,EAAQA,OAAQtG,EAAhB,EAAgBA,OAEhB,OACE,4BACE,eAAGN,UAAWC,EAAAA,KAAd,UAAwB,YACd,iBAAMD,UAAWC,EAAAA,OAAjB,SAA8B2G,QAExC,eAAG5G,UAAWC,EAAAA,KAAd,UAAwB,YACd,iBAAMD,UAAWC,EAAAA,OAAjB,SAA8BK,SAI7C,CChBD,MAA0B,sBAA1B,EAA0D,sBAA1D,EAAwF,oBCYzE,SAAS6H,IACtB,IAAMrI,GAAWC,EAAAA,EAAAA,MACXkG,GAAYc,EAAAA,EAAAA,IAAYf,GAM9B,OAJAoC,EAAAA,EAAAA,YAAU,WACRtI,GAASuI,EAAAA,EAAAA,MACV,GAAE,CAACvI,KAGF,iCACE,iBAAKE,UAAWC,EAAhB,WACE,qBAASD,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,SAA0B,cAC1B,SAACiI,EAAD,QAEF,qBAASlI,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,SAA0B,+BAC1B,SAAC6H,EAAD,WAGJ,wBAAI,gBACJ,SAACd,EAAD,KACA,yBAAMf,IAAa,SAAC,IAAD,OACnB,SAACY,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/contactsComponent/ContactList/ContactItem/ContactItem.module.css?c86c","components/contactsComponent/ContactList/ContactItem/ContactItem.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/contactsComponent/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactsComponent/ContactForm/ContactForm.module.css?eb4e","components/contactsComponent/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactsComponent/StatusFilter/StatusFilter.module.css?83a6","components/contactsComponent/StatusFilter/StatusFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactsComponent/ContactCounter/ContactCounter.module.css?ee8a","components/contactsComponent/ContactCounter/ContactCounter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Page.module.css?92b2","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactItem_wrapper__7KrJV\",\"text\":\"ContactItem_text__ooc4q\",\"btn\":\"ContactItem_btn__YNN+7\",\"checkbox\":\"ContactItem_checkbox__jrHHs\"};","import { useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  toggleMarked,\n} from '../../../../redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const handleToggle = () => {\n    dispatch(toggleMarked(contact));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={css.checkbox}\n        onChange={handleToggle}\n        checked={contact.marked}\n      />\n      <p className={css.text}>{contact.name}</p>\n      <p className={css.text}>{contact.number}</p>\n      <button className={css.btn} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { statusFilters } from './filterContacts/constants';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectStatusFilter = state => state.filters.status;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => {\n    switch (statusFilter) {\n      case statusFilters.active:\n        return contacts.filter(contact => !contact.marked);\n      case statusFilters.marked:\n        return contacts.filter(contact => contact.marked);\n      default:\n        return contacts;\n    }\n  }\n);\n\nexport const selectContactCount = createSelector([selectContacts], contacts => {\n  return contacts.reduce(\n    (count, contact) => {\n      if (contact.marked) {\n        count.marked += 1;\n      } else {\n        count.active += 1;\n      }\n      return count;\n    },\n    { active: 0, marked: 0 }\n  );\n});\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { selectVisibleContacts } from '../../../redux/selectors';\n\nexport function ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactItem contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__2egcW\",\"field\":\"ContactForm_field__HjQrF\"};","import { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/operations';\n\nimport { Button } from 'components/contactsComponent/Button/Button';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const contact = {\n      name: form.elements.name.value.trim(),\n      number: form.elements.number.value.trim(),\n    };\n\n    if (contact.name !== '' && contact.number !== '') {\n      dispatch(addContact(contact));\n      form.reset();\n      return;\n    }\n    toast.error('Something went wrong...Try again.');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"name\"\n        name=\"name\"\n        placeholder=\"Contact name\"\n        autoComplete=\"off\"\n      />\n      <input\n        className={css.field}\n        type=\"number\"\n        name=\"number\"\n        placeholder=\"Contact number\"\n        autoComplete=\"off\"\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"StatusFilter_wrapper__ReRkO\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from '../../../redux/filterContacts/filtersSlice';\n\nimport { Button } from 'components/contactsComponent/Button/Button';\nimport { statusFilters } from '../../../redux/filterContacts/constants';\nimport { selectStatusFilter } from 'redux/selectors';\n\nimport css from './StatusFilter.module.css';\n\nexport function StatusFilter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  return (\n    <div className={css.wrapper}>\n      <Button\n        selected={filter === statusFilters.all}\n        onClick={() => {\n          handleFilterChange(statusFilters.all);\n        }}\n      >\n        All contacts\n      </Button>\n      <Button\n        selected={filter === statusFilters.active}\n        onClick={() => {\n          handleFilterChange(statusFilters.active);\n        }}\n      >\n        Contacts\n      </Button>\n      <Button\n        selected={filter === statusFilters.marked}\n        onClick={() => {\n          handleFilterChange(statusFilters.marked);\n        }}\n      >\n        Marked\n      </Button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"accent\":\"ContactCounter_accent__jlalN\"};","import { useSelector } from 'react-redux';\nimport { selectContactCount } from '../../../redux/selectors';\nimport css from './ContactCounter.module.css';\n\nexport function ContactCounter() {\n  const { active, marked } = useSelector(selectContactCount);\n\n  return (\n    <div>\n      <p className={css.text}>\n        Active: <span className={css.accent}>{active}</span>\n      </p>\n      <p className={css.text}>\n        Marked: <span className={css.accent}>{marked}</span>\n      </p>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Page_wrapper__D8pAf\",\"section\":\"Page_section__gLI9X\",\"title\":\"Page_title__rLLf-\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from 'components/Loaders/Loaders';\n\nimport { ContactList } from 'components/contactsComponent/ContactList/ContactList';\nimport { ContactForm } from 'components/contactsComponent/ContactForm/ContactForm';\nimport { StatusFilter } from 'components/contactsComponent/StatusFilter/StatusFilter';\nimport { ContactCounter } from 'components/contactsComponent/ContactCounter/ContactCounter';\nimport css from './Page.module.css';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className={css.wrapper}>\n        <section className={css.section}>\n          <h2 className={css.title}>Contacts</h2>\n          <ContactCounter />\n        </section>\n        <section className={css.section}>\n          <h2 className={css.title}>Filter contacts by status</h2>\n          <StatusFilter />\n        </section>\n      </div>\n      <h1>Your tasks</h1>\n      <ContactForm />\n      <div>{isLoading && <Loader />}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ContactItem","contact","dispatch","useDispatch","className","css","type","onChange","toggleMarked","checked","marked","name","number","onClick","deleteContact","id","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectStatusFilter","filters","status","selectVisibleContacts","statusFilter","statusFilters","filter","selectContactCount","reduce","count","active","ContactList","visibleContacts","useSelector","ContactForm","onSubmit","event","preventDefault","form","target","elements","trim","addContact","reset","toast","placeholder","autoComplete","Button","StatusFilter","handleFilterChange","setStatusFilter","selected","ContactCounter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}