{"version":3,"file":"static/js/900.681e8af9.chunk.js","mappings":"wNACA,EAA0B,6BAA1B,EAA8D,0BAA9D,EAA8F,yBAA9F,EAAkI,8B,SCOrHA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBACEC,KAAK,WACLF,UAAWC,EACXE,SATe,WACnBL,GAASM,EAAAA,EAAAA,IAAaP,GACvB,EAQKQ,QAASR,EAAQS,UAEnB,cAAGN,UAAWC,EAAd,SAAyBJ,EAAQU,QACjC,cAAGP,UAAWC,EAAd,SAAyBJ,EAAQW,UACjC,mBAAQR,UAAWC,EAASQ,QAlBX,WACnBX,GAASY,EAAAA,EAAAA,IAAcb,EAAQc,IAChC,EAgBG,sBAKL,E,SC9BM,SAASC,IACd,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpC,OACE,wBACGF,EAAgBG,KAAI,SAAAnB,GAAO,OAC1B,yBACE,SAACD,EAAD,CAAaC,QAASA,KADfA,EAAQc,GADS,KAOjC,C,aCfD,EAAuB,0BAAvB,EAAyD,2BCKlD,SAASM,IACd,IAAMnB,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,kBAAMC,UAAWC,EAAUiB,SAlBR,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAEbzB,EAAU,CACdU,KAAMc,EAAKE,SAAShB,KAAKiB,MAAMC,OAC/BjB,OAAQa,EAAKE,SAASf,OAAOgB,MAAMC,QAGrC,GAAqB,KAAjB5B,EAAQU,MAAkC,KAAnBV,EAAQW,OAGjC,OAFAV,GAAS4B,EAAAA,EAAAA,IAAW7B,SACpBwB,EAAKM,QAGPC,MAAM,2CACP,EAGC,WACE,kBACE5B,UAAWC,EACXC,KAAK,OACLK,KAAK,OACLsB,YAAY,eACZC,aAAa,SAEf,kBACE9B,UAAWC,EACXC,KAAK,SACLK,KAAK,SACLsB,YAAY,iBACZC,aAAa,SAEf,SAACC,EAAA,EAAD,CAAQ7B,KAAK,SAAb,2BAGL,CCrCc,SAAS8B,IACtB,IAAMlC,GAAWC,EAAAA,EAAAA,MACXkC,GAAYnB,EAAAA,EAAAA,IAAYoB,EAAAA,IAM9B,OAJAC,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAGF,iCACE,2CACA,SAACmB,EAAD,KACA,yBAAMgB,GAAa,4BACnB,SAACrB,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/contactsComponent/ContactList/ContactItem/ContactItem.module.css?c86c","components/contactsComponent/ContactList/ContactItem/ContactItem.jsx","components/contactsComponent/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactsComponent/ContactForm/ContactForm.module.css?eb4e","components/contactsComponent/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactItem_wrapper__7KrJV\",\"text\":\"ContactItem_text__ooc4q\",\"btn\":\"ContactItem_btn__YNN+7\",\"checkbox\":\"ContactItem_checkbox__jrHHs\"};","import { useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  toggleMarked,\n} from '../../../../redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const handleToggle = () => {\n    dispatch(toggleMarked(contact));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={css.checkbox}\n        onChange={handleToggle}\n        checked={contact.marked}\n      />\n      <p className={css.text}>{contact.name}</p>\n      <p className={css.text}>{contact.number}</p>\n      <button className={css.btn} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { selectVisibleContacts } from '../../../redux/selectors';\n\nexport function ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactItem contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__2egcW\",\"field\":\"ContactForm_field__HjQrF\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/operations';\n\nimport { Button } from 'components/contactsComponent/Button/Button';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const contact = {\n      name: form.elements.name.value.trim(),\n      number: form.elements.number.value.trim(),\n    };\n\n    if (contact.name !== '' && contact.number !== '') {\n      dispatch(addContact(contact));\n      form.reset();\n      return;\n    }\n    alert('Contact can`t be empty. Enter some text!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"name\"\n        name=\"name\"\n        placeholder=\"Contact name\"\n        autoComplete=\"off\"\n      />\n      <input\n        className={css.field}\n        type=\"number\"\n        name=\"number\"\n        placeholder=\"Contact number\"\n        autoComplete=\"off\"\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ContactList } from 'components/contactsComponent/ContactList/ContactList';\nimport { ContactForm } from 'components/contactsComponent/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your tasks</title>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ContactItem","contact","dispatch","useDispatch","className","css","type","onChange","toggleMarked","checked","marked","name","number","onClick","deleteContact","id","ContactList","visibleContacts","useSelector","selectVisibleContacts","map","ContactForm","onSubmit","event","preventDefault","form","target","elements","value","trim","addContact","reset","alert","placeholder","autoComplete","Button","Contacts","isLoading","selectIsLoading","useEffect","fetchContacts"],"sourceRoot":""}